{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;AAEH,uBAA+B,iBAAiB,CAAC,CAAA;AACjD,qBAAmM,eAAe,CAAC,CAAA;AAEnN,6BAAyD,iBAAiB,CAAC,CAAA;AAE3E,+BAA+B,kBAAkB,CAAC,CAAA;AAElD,IAAM,sBAAsB,GAAG,IAAI,kBAAW,CAAC,sBAAsB,CAAC,CAAC;AAEvE,sBAAsB,OAAe;IACnC,MAAM,IAAI,KAAK,CAAC,uCAAqC,OAAO,OAAI,CAAC,CAAC;AACpE,CAAC;AAED;IAAqC,0CAAgB;IAArD;QAAqC,8BAAgB;IAWrD,CAAC;IAVC,mDAAkB,GAAlB,cAA+B,MAAM,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;IAC1E,2CAAU,GAAV,UAAW,EAAO,IAAU,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;IACzD,6CAAY,GAAZ,UAAa,EAAO,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC7D,sBAAI,4CAAQ;aAAZ,cAAyB,MAAM,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,0CAAM;aAAV,cAAuB,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtD,sBAAI,wCAAI;aAAR,cAAqB,MAAM,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClD,6CAAY,GAAZ,UAAa,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAC5F,0CAAS,GAAT,UAAU,KAAU,EAAE,KAAa,EAAE,GAAW,IAAU,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;IACtF,wCAAO,GAAP,cAAkB,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;IAC5C,qCAAI,GAAJ,cAAe,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;IACxC,6BAAC;AAAD,CAAC,AAXD,CAAqC,yBAAgB,GAWpD;AAED;;;;;GAKG;AACU,iCAAyB,GAA2C;IAC/E,EAAC,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,gCAAyB;IAC5E,EAAC,OAAO,EAAE,2BAAoB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAC;IACzE,EAAC,OAAO,EAAE,yBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAC;CAC9D,CAAC;AAGF;IACE,iCAAgB,CAAC,WAAW,EAAE,CAAC;IAC/B,sBAAO,EAAE,CAAC;AACZ,CAAC;AAED;;GAEG;AACH;IACE,EAAE,CAAC,CAAC,CAAC,kBAAW,EAAE,CAAC,CAAC,CAAC;QACnB,qBAAc,CAAC,yBAAkB,CAAC,gBAAgB,CAAC,iCAAyB,CAAC,CAAC,CAAC;IACjF,CAAC;IACD,MAAM,CAAC,qBAAc,CAAC,sBAAsB,CAAC,CAAC;AAChD,CAAC;AALe,sBAAc,iBAK7B,CAAA;AAED;;;;;;;;;;;;;;;GAeG;AACH,yBACI,gBAAsB,EACtB,SAAiD;IACnD,wBAAS,CAAC,sBAAsB,GAAG,IAAI,qCAAsB,EAAE,CAAC;IAChE,IAAI,WAAW,GAAG,yBAAkB,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC5F,MAAM,CAAC,2BAAoB,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AAC7D,CAAC;AANe,uBAAe,kBAM9B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {ComponentRef, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, Type, assertPlatform, coreLoadAndBootstrap, createPlatform, getPlatform} from '@angular/core';\n\nimport {ReflectionCapabilities, reflector, wtfInit} from '../core_private';\n\nimport {Parse5DomAdapter} from './parse5_adapter';\n\nconst SERVER_PLATFORM_MARKER = new OpaqueToken('ServerPlatformMarker');\n\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nclass ServerPlatformLocation extends PlatformLocation {\n  getBaseHrefFromDOM(): string { throw notSupported('getBaseHrefFromDOM'); };\n  onPopState(fn: any): void { notSupported('onPopState'); };\n  onHashChange(fn: any): void { notSupported('onHashChange'); };\n  get pathname(): string { throw notSupported('pathname'); }\n  get search(): string { throw notSupported('search'); }\n  get hash(): string { throw notSupported('hash'); }\n  replaceState(state: any, title: string, url: string): void { notSupported('replaceState'); };\n  pushState(state: any, title: string, url: string): void { notSupported('pushState'); };\n  forward(): void { notSupported('forward'); };\n  back(): void { notSupported('back'); };\n}\n\n/**\n * A set of providers to initialize the Angular platform in a server.\n *\n * Used automatically by `serverBootstrap`, or can be passed to {@link platform}.\n * @experimental\n */\nexport const SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: SERVER_PLATFORM_MARKER, useValue: true}, PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation}\n];\n\n\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n  wtfInit();\n}\n\n/**\n * @experimental\n */\nexport function serverPlatform(): PlatformRef {\n  if (!getPlatform()) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(SERVER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(SERVER_PLATFORM_MARKER);\n}\n\n/**\n * Used to bootstrap Angular in server environment (such as node).\n *\n * This version of bootstrap only creates platform injector and does not define anything for\n * application injector. It is expected that application providers are imported from other\n * packages such as `@angular/platform-browser` or `@angular/platform-browser-dynamic`.\n *\n * ```\n * import {BROWSER_APP_PROVIDERS} from '@angular/platform-browser';\n * import {BROWSER_APP_COMPILER_PROVIDERS} from '@angular/platform-browser-dynamic';\n *\n * serverBootstrap(..., [BROWSER_APP_PROVIDERS, BROWSER_APP_COMPILER_PROVIDERS])\n * ```\n *\n * @experimental\n */\nexport function serverBootstrap(\n    appComponentType: Type,\n    providers: Array<any /*Type | Provider | any[]*/>): Promise<ComponentRef<any>> {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n  var appInjector = ReflectiveInjector.resolveAndCreate(providers, serverPlatform().injector);\n  return coreLoadAndBootstrap(appComponentType, appInjector);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}